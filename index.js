"use strict";

/*
* - послідовність будь-яких символів довільної довжини
*.docx
Регулярні вирази - своєрідний філтр для текстових даних

Регулярні вирази - це інструмент порівняння якогось рядка із заданим шаблонам
За допомогою регулярки ми описуємо як може виглядати рядок, який ми очикуємо від користувача

регулярні вирази починаются і закінчуються з /
/--------------------------/
^(кришечка) - позначає початок рядка
[^(кришечка)] - кришечка в середині рядка позначає логічне НІ
$           - позначає кінець рядка
[]          - діапазон послідовність символів
[a-z]       - діапазон
[a-zA-Z]    - два діапазони одночасно
[abcdef]    - перерахувати вручну 
?           - зустрічається один раз або взагалі жодного разу
*           - зустрічається 0 або більшість разів
+           - зустрічається 1 або більшість разів
.           - означає один будь-який символ


Те, що нам підходить
/^[a-zA-Z]{2,5}/ - шукаємо слово з 2-5 літер (великого чи маленького регістру)  
/^[a-zA-Z]{2,}/  - шукаємо від 2 літер (великого чи маленького регістру)  до плюс нескінченності
/^[a-zA-Z]{2,}[0-9]+$/ - шукаємо слово будь-якої довжини від 2 літер (великого чи маленького регістру)
                         з мінімум 1 цифрою в кінці регулярного шаблону

/^[a-zA-Z]{2,}[0-9]+\.$/ - шукаємо слово будь-якої довжини від 2 літер (великого чи маленького регістру)
                         з мінімум 1 цифрою в кінці регулярного шаблону і після крапки має бути крапка

Те, що нам не підходить
/^[^0-9]+$/    - шукаємо щозавгодно крім рядків, де є чифри

*/

// const regexp = /^Test$/gm

const string1 = 'hello'
const sring2 = new String('hello')

//Regexp

const reg1 = /^[a-zA-Z]{2,5}$/
console.dir(reg1);

const reg2 = new RegExp('^[a-zA-Z]{2,5}$')
console.dir(reg2);

//Експерементуємо: валідуємо email через регулярки
// Метод exec() - виконує пошук зіставлення регулярного виразу у 
// зазначеному рядку. Повертає масив із результатами або null.

const testString = 'yakovenkonatali999@gmail.com';
const emailRegexp = /[^@ \t\r\n]+@[^@ \t\r\n]+\.[^@ \t\r\n]+/;
console.log(emailRegexp);
console.log(emailRegexp.exec(testString)); //повертає Array
console.log(emailRegexp.exec('levaya stro4ka'));// повертає null

// Метод test() - виконує пошук зіставлення регулярного виразу вказаному рядку.
//  Повертає true або false.
console.log(emailRegexp.test(testString)); // повертає true
console.log(emailRegexp.test('levaya stro4ka')); // повертає false

//Метод match() - повертає збіги при зіставленні рядка з регулярним виразом .
console.log(testString.match(emailRegexp));//повертає Array спрацює як Метод exec()

//Метод replace() - повертає новий рядок із деякими чи всіма зіставленнями із шаблоном, 
//заміненими на замінник. Шаблон може бути рядком або регулярним виразом , 
//а замінник може бути рядком або функцією, що викликається при кожному зіставленні.
let str = 'Blue SKY';
console.log(str.replace(/^[A-Z]{3}/,'test123')); // отримує Blue test123